Бэктрекинг: Найти город в системе двусторонних дорог, у которого сумма расстояний до любого города минимальна.

#include "stdafx.h"
#include <iostream>
using namespace std;

class DistanceMatrix
{
	int n;
	int **a;
public:
	void PrintMatrix()
	{
		cout <<" Distance Matrix: "<<endl ;
		for (int i = 0; i < n; i++)
		{
			cout << " ";
			for (int j = 0; j < n; j++)
				cout << a[i][j] << "    ";
			cout << endl;
		}
	}
	void MinCityDistance()
	{
		int min_sum = INT_MAX, city, sum;
		for (int i = 0; i < n; i++)
		{
			sum = 0;
			for (int j = 0; j < n; j++)
				sum += a[i][j];
			if (sum < min_sum)
			{
				min_sum = sum;
				city = i;
			}
		}
		cout << " City " << city + 1 << " has the minimum sum of distancese = " << min_sum << endl;
	}
	DistanceMatrix()
	{
		do
		{
			cout << " Enter the number of cities: ";
			cin >> n;
		} while (n <= 0);
		a = new int*[n];
		for (int i = 0; i < n; i++)
			a[i] = new int[n];
		int distance;
		for (int i = 0; i < n; i++)
		{
			a[i][i] = 0;
			for (int j = i + 1; j < n; j++)
			{
				cout << " Enter the distance " << (i + 1) << " - " << (j + 1) << ": ";
				cin >> distance;
				a[i][j] = a[j][i] = distance;
			}
		}
	}
	~DistanceMatrix()
	{
		for (int i = 0; i < n; i++)
			delete a[i];
		delete[] a;
	}
};

void main()
{
	DistanceMatrix d;
	d.PrintMatrix();
	d.MinCityDistance();

	system("PAUSE");
}
